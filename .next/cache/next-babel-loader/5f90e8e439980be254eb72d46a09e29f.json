{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Card, Page, DataTable } from '@shopify/polaris';\nimport React from \"react\";\nimport axios from \"Axios\";\n\nvar CarbonMetrics =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CarbonMetrics, _React$Component);\n\n  function CarbonMetrics(props) {\n    var _this;\n\n    _classCallCheck(this, CarbonMetrics);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CarbonMetrics).call(this, props));\n    _this.state = {\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(CarbonMetrics, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var items, promises;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                items = this.props.items;\n                promises = items.map(\n                /*#__PURE__*/\n                function () {\n                  var _ref = _asyncToGenerator(\n                  /*#__PURE__*/\n                  _regeneratorRuntime.mark(function _callee(item) {\n                    var name;\n                    return _regeneratorRuntime.wrap(function _callee$(_context) {\n                      while (1) {\n                        switch (_context.prev = _context.next) {\n                          case 0:\n                            name = item.title;\n                            _context.next = 3;\n                            return axios.get(\"https://carbon-calculator-shopify.herokuapp.com/api/products/\".concat(name, \"/nutrition\"));\n\n                          case 3:\n                            return _context.abrupt(\"return\", _context.sent);\n\n                          case 4:\n                          case \"end\":\n                            return _context.stop();\n                        }\n                      }\n                    }, _callee);\n                  }));\n\n                  return function (_x) {\n                    return _ref.apply(this, arguments);\n                  };\n                }());\n\n                _Promise.all(promises).then(function (result) {\n                  var newItems = result.map(function (newItem, index) {\n                    return _objectSpread({}, items[index], {}, newItem.data);\n                  });\n\n                  _this2.setState({\n                    items: newItems\n                  });\n                });\n\n              case 3:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var items = this.state.items;\n      console.log(items);\n      var enrichedItems = items.map(function (item) {\n        return [item.title, item.nf_calories, item.nf_iron_dv, item.nf_calcium_dv, item.nf_vitamin_a_dv, item.nf_serving_size_qty];\n      });\n      return __jsx(Page, {\n        title: \"Nutrition Metrics\"\n      }, __jsx(Card, null, __jsx(DataTable, {\n        columnContentTypes: ['text', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric'],\n        headings: ['Product', 'Calories', 'Iron content (g)', 'Calcium (g)', 'Vitimin A (g)', 'Serving Size (Cups)'],\n        rows: enrichedItems\n      })));\n    }\n  }]);\n\n  return CarbonMetrics;\n}(React.Component);\n\nexport default CarbonMetrics;","map":{"version":3,"sources":["/Users/davidnoah/Desktop/fullstack/stackathon/componenets/carbon-metrics.js"],"names":["Card","Page","DataTable","React","axios","CarbonMetrics","props","state","items","promises","map","item","name","title","get","all","then","result","newItems","newItem","index","data","setState","console","log","enrichedItems","nf_calories","nf_iron_dv","nf_calcium_dv","nf_vitamin_a_dv","nf_serving_size_qty","Component"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,SACEA,IADF,EAEEC,IAFF,EAGEC,SAHF,QAIO,kBAJP;AAKA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;IAEMC,a;;;;;AACJ,yBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,uFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE;AADI,KAAb;AAFgB;AAKjB;;;;;;;;;;;;;;;AAGSA,gBAAAA,K,GAAU,KAAKF,K,CAAfE,K;AAEFC,gBAAAA,Q,GAAWD,KAAK,CAACE,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA,2CAAU,iBAAOC,IAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACnBC,4BAAAA,IADmB,GACZD,IAAI,CAACE,KADO;AAAA;AAAA,mCAEZT,KAAK,CAACU,GAAN,wEAA0EF,IAA1E,gBAFY;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAV;;AAAA;AAAA;AAAA;AAAA,oB;;AAKjB,yBAAQG,GAAR,CAAYN,QAAZ,EAAsBO,IAAtB,CAA2B,UAACC,MAAD,EAAY;AACrC,sBAAMC,QAAQ,GAAGD,MAAM,CAACP,GAAP,CAAW,UAACS,OAAD,EAAUC,KAAV,EAAoB;AAC9C,6CAAaZ,KAAK,CAACY,KAAD,CAAlB,MAA8BD,OAAO,CAACE,IAAtC;AACD,mBAFgB,CAAjB;;AAIA,kBAAA,MAAI,CAACC,QAAL,CAAc;AAAEd,oBAAAA,KAAK,EAAEU;AAAT,mBAAd;AACD,iBAND;;;;;;;;;;;;;;;;;;6BASO;AAAA,UACCV,KADD,GACW,KAAKD,KADhB,CACCC,KADD;AAEPe,MAAAA,OAAO,CAACC,GAAR,CAAYhB,KAAZ;AACA,UAAMiB,aAAa,GAAGjB,KAAK,CAACE,GAAN,CAAU,UAACC,IAAD;AAAA,eAAU,CACxCA,IAAI,CAACE,KADmC,EAExCF,IAAI,CAACe,WAFmC,EAGxCf,IAAI,CAACgB,UAHmC,EAIxChB,IAAI,CAACiB,aAJmC,EAKxCjB,IAAI,CAACkB,eALmC,EAMxClB,IAAI,CAACmB,mBANmC,CAAV;AAAA,OAAV,CAAtB;AASA,aACE,MAAC,IAAD;AAAM,QAAA,KAAK,EAAC;AAAZ,SACE,MAAC,IAAD,QACE,MAAC,SAAD;AACE,QAAA,kBAAkB,EAAE,CAClB,MADkB,EAElB,SAFkB,EAGlB,SAHkB,EAIlB,SAJkB,EAKlB,SALkB,EAMlB,SANkB,CADtB;AASE,QAAA,QAAQ,EAAE,CACR,SADQ,EAER,UAFQ,EAGR,kBAHQ,EAIR,aAJQ,EAKR,eALQ,EAMR,qBANQ,CATZ;AAiBE,QAAA,IAAI,EAAEL;AAjBR,QADF,CADF,CADF;AAyBD;;;;EA9DyBtB,KAAK,CAAC4B,S;;AAgElC,eAAe1B,aAAf","sourcesContent":["import {\n  Card,\n  Page,\n  DataTable\n} from '@shopify/polaris';\nimport React from \"react\";\nimport axios from \"Axios\"\n\nclass CarbonMetrics extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n      items: [],\n    };\n  }\n\n  async componentDidMount () {\n    const { items } = this.props;\n\n    const promises = items.map(async (item) => {\n      const name = item.title;\n      return await axios.get(`https://carbon-calculator-shopify.herokuapp.com/api/products/${name}/nutrition`);\n    });\n\n    Promise.all(promises).then((result) => {\n      const newItems = result.map((newItem, index) => {\n        return {  ...items[index], ...newItem.data };\n      })\n\n      this.setState({ items: newItems })\n    })\n  }\n\n  render (){\n    const { items } = this.state;\n    console.log(items)\n    const enrichedItems = items.map((item) => [\n      item.title,\n      item.nf_calories,\n      item.nf_iron_dv,\n      item.nf_calcium_dv,\n      item.nf_vitamin_a_dv,\n      item.nf_serving_size_qty\n    ])\n\n    return (\n      <Page title=\"Nutrition Metrics\">\n        <Card>\n          <DataTable\n            columnContentTypes={[\n              'text',\n              'numeric',\n              'numeric',\n              'numeric',\n              'numeric',\n              'numeric'\n            ]}\n            headings={[\n              'Product',\n              'Calories',\n              'Iron content (g)',\n              'Calcium (g)',\n              'Vitimin A (g)',\n              'Serving Size (Cups)'\n            ]}\n            rows={enrichedItems}\n          />\n        </Card>\n      </Page>\n    );\n  }\n}\nexport default CarbonMetrics "]},"metadata":{},"sourceType":"module"}