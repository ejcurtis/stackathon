{"ast":null,"code":"import _Object$defineProperty from \"@babel/runtime-corejs2/core-js/object/define-property\";\nimport _Object$defineProperties from \"@babel/runtime-corejs2/core-js/object/define-properties\";\nimport _Object$getOwnPropertyDescriptors from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptors\";\nimport _Object$getOwnPropertyDescriptor from \"@babel/runtime-corejs2/core-js/object/get-own-property-descriptor\";\nimport _Object$getOwnPropertySymbols from \"@babel/runtime-corejs2/core-js/object/get-own-property-symbols\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = _Object$keys(object); if (_Object$getOwnPropertySymbols) { var symbols = _Object$getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return _Object$getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (_Object$getOwnPropertyDescriptors) { _Object$defineProperties(target, _Object$getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { _Object$defineProperty(target, key, _Object$getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useCallback, useState, useEffect } from 'react';\nimport { DataTable, Page, Button, Card, Collapsible } from '@shopify/polaris';\nimport axios from \"Axios\";\n\nfunction SingleItemCarbonMetrics(props) {\n  var _useState = useState(false),\n      active = _useState[0],\n      setActive = _useState[1];\n\n  var _useState2 = useState({}),\n      item = _useState2[0],\n      setItem = _useState2[1];\n\n  var handleToggle = useCallback(function () {\n    return setActive(function (active) {\n      return !active;\n    });\n  }, []);\n  useEffect(function () {\n    var fetchData =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var name, result;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                name = props.item.title;\n                _context.next = 3;\n                return axios.get(\"https://carbon-calculator-shopify.herokuapp.com/api/products/\".concat(name, \"/nutrition\"));\n\n              case 3:\n                result = _context.sent;\n                setItem(_objectSpread({}, props.item, {}, result.data));\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    fetchData();\n  }, []);\n  return __jsx(Page, null, __jsx(Card, null, __jsx(Button, {\n    onClick: handleToggle,\n    ariaExpanded: active,\n    ariaControls: \"basic-collapsible\"\n  }, !active ? 'See Metrics' : 'Close'), __jsx(Collapsible, {\n    open: active,\n    id: \"basic-collapsible\"\n  }, __jsx(DataTable, {\n    columnContentTypes: ['text', 'numeric', 'numeric', 'numeric', 'numeric', 'numeric'],\n    headings: ['Product', 'Calories', 'Iron content (g)', 'Calcium (g)', 'Vitimin A (g)', 'Serving Size (Cups)'],\n    rows: [[item.title, item.nf_calories, item.nf_iron_dv, item.nf_calcium_dv, item.nf_vitamin_a_dv, item.nf_serving_size_qty]]\n  }))));\n}\n\nexport default SingleItemCarbonMetrics;","map":{"version":3,"sources":["/Users/davidnoah/Desktop/fullstack/stackathon/componenets/single-item-carbon-metrics.js"],"names":["React","useCallback","useState","useEffect","DataTable","Page","Button","Card","Collapsible","axios","SingleItemCarbonMetrics","props","active","setActive","item","setItem","handleToggle","fetchData","name","title","get","result","data","nf_calories","nf_iron_dv","nf_calcium_dv","nf_vitamin_a_dv","nf_serving_size_qty"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,QAA7B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,IAAlC,EAAwCC,WAAxC,QAA2D,kBAA3D;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,SAASC,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA,kBACVT,QAAQ,CAAC,KAAD,CADE;AAAA,MAC/BU,MAD+B;AAAA,MACvBC,SADuB;;AAAA,mBAEdX,QAAQ,CAAC,EAAD,CAFM;AAAA,MAE/BY,IAF+B;AAAA,MAEzBC,OAFyB;;AAGtC,MAAMC,YAAY,GAAGf,WAAW,CAAC;AAAA,WAAMY,SAAS,CAAC,UAACD,MAAD;AAAA,aAAY,CAACA,MAAb;AAAA,KAAD,CAAf;AAAA,GAAD,EAAuC,EAAvC,CAAhC;AAEAT,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMc,SAAS;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,gBAAAA,IADU,GACHP,KAAK,CAACG,IAAN,CAAWK,KADR;AAAA;AAAA,uBAEKV,KAAK,CAACW,GAAN,wEAA0EF,IAA1E,gBAFL;;AAAA;AAEVG,gBAAAA,MAFU;AAIhBN,gBAAAA,OAAO,mBAAMJ,KAAK,CAACG,IAAZ,MAAqBO,MAAM,CAACC,IAA5B,EAAP;;AAJgB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATL,SAAS;AAAA;AAAA;AAAA,OAAf;;AAOAA,IAAAA,SAAS;AACV,GATQ,EASN,EATM,CAAT;AAWA,SACE,MAAC,IAAD,QACE,MAAC,IAAD,QACA,MAAC,MAAD;AACE,IAAA,OAAO,EAAED,YADX;AAEE,IAAA,YAAY,EAAEJ,MAFhB;AAGE,IAAA,YAAY,EAAC;AAHf,KAIE,CAACA,MAAD,GAAU,aAAV,GAA0B,OAJ5B,CADA,EAME,MAAC,WAAD;AAAa,IAAA,IAAI,EAAEA,MAAnB;AAA2B,IAAA,EAAE,EAAC;AAA9B,KACE,MAAC,SAAD;AACE,IAAA,kBAAkB,EAAE,CAClB,MADkB,EAElB,SAFkB,EAGlB,SAHkB,EAIlB,SAJkB,EAKlB,SALkB,EAMlB,SANkB,CADtB;AASE,IAAA,QAAQ,EAAE,CACR,SADQ,EAER,UAFQ,EAGR,kBAHQ,EAIR,aAJQ,EAKR,eALQ,EAMR,qBANQ,CATZ;AAiBE,IAAA,IAAI,EAAE,CAAC,CACLE,IAAI,CAACK,KADA,EAELL,IAAI,CAACS,WAFA,EAGLT,IAAI,CAACU,UAHA,EAILV,IAAI,CAACW,aAJA,EAKLX,IAAI,CAACY,eALA,EAMLZ,IAAI,CAACa,mBANA,CAAD;AAjBR,IADF,CANF,CADF,CADF;AAuCD;;AAED,eAAejB,uBAAf","sourcesContent":["import React, { useCallback, useState, useEffect } from 'react';\nimport { DataTable, Page, Button, Card, Collapsible } from '@shopify/polaris';\nimport axios from \"Axios\"\n\nfunction SingleItemCarbonMetrics(props) {\n  const [active, setActive] = useState(false);\n  const [item, setItem] = useState({});\n  const handleToggle = useCallback(() => setActive((active) => !active), []);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const name = props.item.title;\n      const result = await axios.get(`https://carbon-calculator-shopify.herokuapp.com/api/products/${name}/nutrition`);\n\n      setItem({ ...props.item, ...result.data })\n    }\n\n    fetchData();\n  }, [])\n\n  return (\n    <Page>\n      <Card>\n      <Button\n        onClick={handleToggle}\n        ariaExpanded={active}\n        ariaControls=\"basic-collapsible\"\n      >{!active ? 'See Metrics' : 'Close'}</Button>\n        <Collapsible open={active} id=\"basic-collapsible\">\n          <DataTable\n            columnContentTypes={[\n              'text',\n              'numeric',\n              'numeric',\n              'numeric',\n              'numeric',\n              'numeric'\n            ]}\n            headings={[\n              'Product',\n              'Calories',\n              'Iron content (g)',\n              'Calcium (g)',\n              'Vitimin A (g)',\n              'Serving Size (Cups)'\n            ]}\n            rows={[[\n              item.title,\n              item.nf_calories,\n              item.nf_iron_dv,\n              item.nf_calcium_dv,\n              item.nf_vitamin_a_dv,\n              item.nf_serving_size_qty\n            ]]}\n          />\n        </Collapsible>\n      </Card>\n    </Page>\n  );\n}\n\nexport default SingleItemCarbonMetrics "]},"metadata":{},"sourceType":"module"}